<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yu.mapper.ReceiveNoticeMsgMapper">
    <resultMap id="BaseResultMap" type="com.yu.model.entity.ReceiveNoticeMsgEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="notice_id" jdbcType="BIGINT" property="noticeId"/>
        <result column="receive_id" jdbcType="INTEGER" property="receiveId"/>
    </resultMap>
    <sql id="Base_Column_List">
        `id`, `notice_id`, `receive_id`, `r_status`
    </sql>
    <select id="getNoticeList" resultType="com.yu.model.vo.NoticeVo">
        select
        n.msg,
        n.id,
        n.title,
        n.type,
        if((n.update_time > (select n.update_time from notice_read where id = #{userId})), 0, 1) as isRead,
        u.username as name
        from receive_notice_msg r
        join sender_notice_msg n on r.notice_id = r.id
        left join sys_user u on r.receive_id = u.id
        where (r.receive_id = ${userId}
        or r.receive_id = ${deptId}
        or n.type = 1)
        <if test="type!=null">
            and n.type = type
        </if>
        and r.notice_id = n.id
        order by n.update_time desc
    </select>
    <select id="getNoReadCount" resultType="java.lang.Long" parameterType="java.lang.Long">
        select count(1)
        from receive_notice_msg r
                 join sender_notice_msg s on r.notice_id = s.id
        where (r.receive_id = ${userId}
           or r.receive_id = ${deptId})
            and s.update_time >
                (select n.update_time from notice_read n where id = ${userId})
    </select>

</mapper>